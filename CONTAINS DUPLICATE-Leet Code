class Solution {
public:
    bool containsDuplicate(vector<int>& nums)
    {
       /*O(NlogN)  O(1) 
         1] int n=nums.size();
         sort(nums.begin(),nums.end());
         for(int i=0;i<n-1;i++)
             if(nums[i]==nums[i+1])
                 return true;
         return false;
        */
        
        /*O(N)   O(N)   -Space and time complexity trade off        
         2] unordered_map<int,int> m;
        for(auto i:nums)
            m[i]++;
        for(auto a:m)
        {   
            if(a.second>1)
                return true;
        }
        return false;   
        */
        
        /*O(N)   O(N)
        3] unordered_set<int> s;
        for(auto a:nums)s.insert(a);
        if(s.size()==nums.size())
            return false;
        return true;
        */
        }
};
